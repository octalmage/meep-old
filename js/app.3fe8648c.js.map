{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/post.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/username.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?0db5","webpack:///./src/App.vue?eabf","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/rest.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/index.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?4e3d","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?79a6","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?3b61","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/thread.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","basePost","creator","createdAt","id","thread","body","image","Post","uint64","baseHeight","revisionNumber","revisionHeight","Height","baseUsername","Username","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","addrPrefix","sdkVersion","options","subscribe","all","params","ContentType","types","Registry","getStructure","template","structure","fields","field","getDefaultState","_Structure","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","_Subscriptions","Set","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getters","getTypeStructure","actions","init","rootGetters","console","log","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","V1Order","V1State","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","secure","path","format","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryChannels","method","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","queryClient","initTxClient","vuexGetters","initQueryClient","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","SpVuexError","QueryChannels","pagination","nextKey","next_values","prop","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","msg","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryParams","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getParams","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryParams","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","queryPostAll","queryPost","queryThreadAll","queryThread","queryUsernameAll","queryUsername","MsgUpdateThread","MsgCreatePost","MsgUpdatePost","MsgCreateThread","MsgDeleteUsername","MsgDeleteThread","MsgCreateUsername","MsgDeletePost","MsgUpdateUsername","msgUpdateThread","msgCreatePost","msgUpdatePost","msgCreateThread","msgDeleteUsername","msgDeleteThread","msgCreateUsername","msgDeletePost","msgUpdateUsername","UsernameAll","Thread","ThreadAll","PostAll","getUsername","getUsernameAll","getThread","getThreadAll","getPost","getPostAll","QueryUsername","QueryUsernameAll","QueryThread","QueryThreadAll","QueryPost","QueryPostAll","sendMsgUpdateThread","sendMsgCreatePost","sendMsgUpdatePost","sendMsgCreateThread","sendMsgDeleteUsername","sendMsgDeleteThread","sendMsgCreateUsername","sendMsgDeletePost","sendMsgUpdateUsername","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","V1Beta1BondStatus","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","V1Beta1ProposalStatus","V1Beta1VoteOption","sendMsgVerifyInvariant","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","CosmosCosmosSdkCosmosBaseAbciV1Beta1","load","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","OctalmageMeepOctalmageMeepMeep","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","balances","_depsLoaded","style","disabled","submitting","getMEEP","hasFunds","currentAccount","placeholder","onFileChanged","createThread","threads","postsForThread","post","openImage","src","substr","formatTimestamp","now","createPost","selectedFile","watch","newAccount","updateBalances","threadId","posts","reverse","loggedIn","methods","event","file","target","files","FileReader","vm","onloadend","readAsDataURL","location","host","replace","newTab","open","document","innerHTML","alert","inputFile","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","mounted","routerHistory","createWebHistory","routes","component","Types","Index","router","createRouter","history","app","createApp","App","config","globalProperties","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseThread","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseMsgCreateUsername","baseMsgUpdateUsername","baseMsgDeleteUsername","baseMsgCreateThread","baseMsgUpdateThread","baseMsgDeleteThread","baseMsgCreatePost","baseMsgUpdatePost","baseMsgDeletePost","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.3fe8648c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst basePost = {\n    creator: \"\",\n    createdAt: 0,\n    id: 0,\n    thread: 0,\n    body: \"\",\n    image: \"\",\n};\nexport const Post = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(16).int64(message.createdAt);\n        }\n        if (message.id !== 0) {\n            writer.uint32(24).uint64(message.id);\n        }\n        if (message.thread !== 0) {\n            writer.uint32(32).uint64(message.thread);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(42).string(message.body);\n        }\n        if (message.image !== \"\") {\n            writer.uint32(50).string(message.image);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.createdAt = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.thread = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.body = reader.string();\n                    break;\n                case 6:\n                    message.image = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = Number(object.thread);\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        message.id !== undefined && (obj.id = message.id);\n        message.thread !== undefined && (obj.thread = message.thread);\n        message.body !== undefined && (obj.body = message.body);\n        message.image !== undefined && (obj.image = message.image);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = object.thread;\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseUsername = { creator: \"\", id: 0, name: \"\" };\nexport const Username = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(26).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUsername };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init', {  chainId: 'meep-1',\n  addrPrefix: 'meep',\n  sdkVersion: 'Stargate',})\n\t\tthis.initialized = true\n\n\t\tawait this.$store.dispatch(\"octalmage.meep.meep/QueryPostAll\",{options:{subscribe:true, all:true},params:{}})\n\t\tawait this.$store.dispatch(\"octalmage.meep.meep/QueryThreadAll\",{options:{subscribe:true, all:true},params:{}})\n\t},\n\t// errorCaptured(err) {\n\t// \tconsole.log(err)\n\t// \treturn false\n\t// }\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Home\" icon=\"Home\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/wallet\" text=\"Wallet\" icon=\"Money\" />\n\t\t\t\t\t\t<!-- <div class=\"sp-dash\"></div> -->\n\t\t\t\t\t\t<!-- <SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />-->\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=3176ec15\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=3ec6f917\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3ec6f917&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title meep/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPostAll\n         * @request GET:/octalmage/meep/meep/post\n         */\n        this.queryPostAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/post`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPost\n         * @request GET:/octalmage/meep/meep/post/{id}\n         */\n        this.queryPost = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/post/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryThreadAll\n         * @request GET:/octalmage/meep/meep/thread\n         */\n        this.queryThreadAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/thread`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryThread\n         * @request GET:/octalmage/meep/meep/thread/{id}\n         */\n        this.queryThread = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/thread/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryUsernameAll\n         * @request GET:/octalmage/meep/meep/username\n         */\n        this.queryUsernameAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/username`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryUsername\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/octalmage/meep/meep/username/{id}\n         */\n        this.queryUsername = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/username/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateThread } from \"./types/meep/tx\";\nimport { MsgCreatePost } from \"./types/meep/tx\";\nimport { MsgUpdatePost } from \"./types/meep/tx\";\nimport { MsgCreateThread } from \"./types/meep/tx\";\nimport { MsgDeleteUsername } from \"./types/meep/tx\";\nimport { MsgDeleteThread } from \"./types/meep/tx\";\nimport { MsgCreateUsername } from \"./types/meep/tx\";\nimport { MsgDeletePost } from \"./types/meep/tx\";\nimport { MsgUpdateUsername } from \"./types/meep/tx\";\nconst types = [\n    [\"/octalmage.meep.meep.MsgUpdateThread\", MsgUpdateThread],\n    [\"/octalmage.meep.meep.MsgCreatePost\", MsgCreatePost],\n    [\"/octalmage.meep.meep.MsgUpdatePost\", MsgUpdatePost],\n    [\"/octalmage.meep.meep.MsgCreateThread\", MsgCreateThread],\n    [\"/octalmage.meep.meep.MsgDeleteUsername\", MsgDeleteUsername],\n    [\"/octalmage.meep.meep.MsgDeleteThread\", MsgDeleteThread],\n    [\"/octalmage.meep.meep.MsgCreateUsername\", MsgCreateUsername],\n    [\"/octalmage.meep.meep.MsgDeletePost\", MsgDeletePost],\n    [\"/octalmage.meep.meep.MsgUpdateUsername\", MsgUpdateUsername],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpdateThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdateThread\", value: data }),\n        msgCreatePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreatePost\", value: data }),\n        msgUpdatePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdatePost\", value: data }),\n        msgCreateThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreateThread\", value: data }),\n        msgDeleteUsername: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeleteUsername\", value: data }),\n        msgDeleteThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeleteThread\", value: data }),\n        msgCreateUsername: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreateUsername\", value: data }),\n        msgDeletePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeletePost\", value: data }),\n        msgUpdateUsername: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdateUsername\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Post } from \"./module/types/meep/post\";\nimport { Thread } from \"./module/types/meep/thread\";\nimport { Username } from \"./module/types/meep/username\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Username: {},\n        UsernameAll: {},\n        Thread: {},\n        ThreadAll: {},\n        Post: {},\n        PostAll: {},\n        _Structure: {\n            Post: getStructure(Post.fromPartial({})),\n            Thread: getStructure(Thread.fromPartial({})),\n            Username: getStructure(Username.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getUsername: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Username[JSON.stringify(params)] ?? {};\n        },\n        getUsernameAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UsernameAll[JSON.stringify(params)] ?? {};\n        },\n        getThread: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Thread[JSON.stringify(params)] ?? {};\n        },\n        getThreadAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ThreadAll[JSON.stringify(params)] ?? {};\n        },\n        getPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Post[JSON.stringify(params)] ?? {};\n        },\n        getPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PostAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryUsername({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUsername(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryUsername(key.id)).data;\n                commit('QUERY', { query: 'Username', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUsername', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUsername']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUsername', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUsernameAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUsernameAll(query)).data : (await (await initQueryClient(rootGetters)).queryUsernameAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryUsernameAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'UsernameAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUsernameAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUsernameAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUsernameAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryThread({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryThread(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryThread(key.id)).data;\n                commit('QUERY', { query: 'Thread', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryThread', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getThread']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryThread', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryThreadAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryThreadAll(query)).data : (await (await initQueryClient(rootGetters)).queryThreadAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryThreadAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ThreadAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryThreadAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getThreadAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryThreadAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPost(key.id)).data;\n                commit('QUERY', { query: 'Post', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPostAll(query)).data : (await (await initQueryClient(rootGetters)).queryPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpdateThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteUsername({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteUsername(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteUsername:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateUsername({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateUsername(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateUsername:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateUsername({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateUsername(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateUsername:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpdateThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteUsername({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteUsername(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteUsername:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateUsername({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateUsername(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateUsername:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateUsername({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateUsername(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateUsername:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport OctalmageMeepOctalmageMeepMeep from './octalmage/meep/octalmage.meep.meep';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nexport default {\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    OctalmageMeepOctalmageMeepMeep: load(OctalmageMeepOctalmageMeepMeep, 'octalmage.meep.meep'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"sp-token-send__holder\">\n\t\t\t<div class=\"sp-component sp-assets__wrapper\">\n\t\t\t\t<SpAssets :balances=\"balances\" />\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\tbalances: function () {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\treturn (\n\t\t\t\t\tthis.$store.getters['cosmos.bank.v1beta1/getAllBalances']({\n\t\t\t\t\t\tparams: { address: this.address },\n\t\t\t\t\t})?.balances ?? []\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn []\n\t\t\t}\n\t\t},\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=0d920a52\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <div class=\"container\">\n      <!-- this line is used by starport scaffolding # 4 -->\n      <!-- <SpType modulePath=\"octalmage.meep.meep\" moduleType=\"Thread\"  /> -->\n      <h3>MEEP</h3>\n      <div class=\"sp-voter__main sp-box sp-shadow sp-form-group\">\n        <div\n          class=\"sp-voter__main sp-box sp-shadow sp-form-group\"\n          v-show=\"!hasFunds && currentAccount\"\n        >\n          <sp-button :disabled=\"submitting\" @click=\"getMEEP\"\n            >Get 5 MEEP for free!</sp-button\n          >\n        </div>\n        <form class=\"sp-voter__main__form\">\n          <div class=\"sp-voter__main__rcpt__header sp-box-header\">\n            Create a new thread\n          </div>\n\n          <textarea\n            :disabled=\"submitting\"\n            class=\"sp-input\"\n            placeholder=\"\"\n            v-model=\"body\"\n          />\n          <input ref=\"inputFile\" type=\"file\" @change=\"onFileChanged\" /> <br /><br />\n          <sp-button\n            v-show=\"hasFunds\"\n            :disabled=\"submitting\"\n            @click=\"createThread\"\n            >Create</sp-button\n          >\n          <sp-button v-show=\"!currentAccount\" disabled>Sign in</sp-button>\n          <sp-button v-show=\"!hasFunds && currentAccount\" disabled\n            >You need MEEP</sp-button\n          >\n        </form>\n      </div>\n\n      <div class=\"sp-type-list sp-type__list\">\n        <h3>Threads</h3>\n        <br />\n        <div\n          style=\"margin-bottom: 1rem\"\n          v-for=\"thread in threads\"\n          v-bind:key=\"'thread' + thread.id\"\n          class=\"sp-type-list__main sp-box sp-shadow\"\n        >\n          <div class=\"sp-type-list__header sp-box-header\">POSTS</div>\n          <div\n            v-for=\"post in postsForThread(thread.id)\"\n            v-bind:key=\"'post' + post.id\"\n          >\n            <div class=\"sp-type-list__item\">\n              <div  v-show=\"!post.image\" class=\"sp-type-list__item__icon\">\n                <div class=\"sp-icon sp-icon-Docs\"></div>\n      \n              </div>\n              <div style=\"width: 300px;  margin-right: 12px;\" v-show=\"post.image\" >\n                  <img @click=\"openImage(post.image)\" style=\"max-width: 100%;\" :src=\"post.image\" v-show=\"post.image\" />\n                </div>\n              <div class=\"sp-type-list__item__details\">\n                User\n                <strong>{{ post.creator.substr(-8) }}</strong> said:<br /><br />\n                <div class=\"sp-type-list__item__details__field\">\n                  {{ post.body }}\n                </div>\n                <br />\n                <strong>{{\n                  formatTimestamp(Date.now(), post.createdAt * 1000)\n                }}</strong>\n              </div>\n            </div>\n            <div class=\"sp-dashed-line\">&nbsp;</div>\n          </div>\n          <form class=\"sp-voter__main__form\">\n            <div class=\"sp-voter__main__rcpt__header sp-box-header\">\n              Create a new reply\n            </div>\n\n            <textarea\n              :disabled=\"submitting\"\n              class=\"sp-input\"\n              placeholder=\"\"\n              v-model=\"body\"\n            />\n\n            <sp-button\n              v-show=\"hasFunds\"\n              :disabled=\"submitting\"\n              @click=\"createPost(thread.id)\"\n              >Post</sp-button\n            >\n            <sp-button v-show=\"!currentAccount\" disabled>Sign in</sp-button>\n            <sp-button v-show=\"!hasFunds && currentAccount\" disabled\n              >You need MEEP</sp-button\n            >\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"Types\",\n  data() {\n    return {\n      body: \"\",\n      submitting: false,\n      balances: [],\n      selectedFile: '',\n    };\n  },\n  watch: {\n    // whenever question changes, this function will run\n    currentAccount: async function (newAccount) {\n      if (newAccount) {\n        this.updateBalances();\n      }\n    },\n  },\n  computed: {\n    postsForThread() {\n      return (threadId) => this.posts.filter((p) => p.thread === threadId);\n    },\n    hasFunds() {\n      return this.balances.length > 0;\n    },\n    threads() {\n      const threads =\n        this.$store.getters[\"octalmage.meep.meep/getThreadAll\"]({\n          params: {},\n        })?.Thread ?? [];\n      \n      // threads.sort((a, b) => {\n      //   const maxa = Math.max.apply(Math, this.postsForThread(a.id).map(function(o) { return o.createdAt; }))\n      //   const maxb = Math.max.apply(Math, this.postsForThread(b.id).map(function(o) { return o.createdAt; }))\n      //   return maxb - maxa;\n      // });\n      // console.log(threads);\n      threads.reverse();\n      return threads;\n    },\n    posts() {\n      const posts =\n        this.$store.getters[\"octalmage.meep.meep/getPostAll\"]({\n          params: {},\n        })?.Post ?? [];\n      // console.log(posts);\n      return posts;\n    },\n    currentAccount() {\n      if (this._depsLoaded) {\n        if (this.loggedIn) {\n          return this.$store.getters[\"common/wallet/address\"];\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    loggedIn() {\n      if (this._depsLoaded) {\n        return this.$store.getters[\"common/wallet/loggedIn\"];\n      } else {\n        return false;\n      }\n    },\n  },\n  methods: {\n    onFileChanged(event) {\n      console.log('changed');\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      const vm = this;\n      reader.onloadend = function () {\n        vm.selectedFile = reader.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    async updateBalances() {\n      if (this.currentAccount) {\n        await this.$store.dispatch(\"cosmos.bank.v1beta1/QueryAllBalances\", {\n          options: { subscribe: true, all: true },\n          params: { address: this.currentAccount },\n        });\n        this.balances =\n          this.$store.getters[\"cosmos.bank.v1beta1/getAllBalances\"]({\n            params: { address: this.currentAccount },\n          })?.balances ?? [];\n      } else {\n        this.balances = [];\n      }\n    },\n    async getMEEP() {\n      this.submitting = true;\n      const options = {\n        address: this.currentAccount,\n        coins: [\"5meep\"],\n      };\n\n      await fetch(\n        `http://${window.location.host\n          .replace(\"8081\", \"4500\")\n          .replace(\"8888\", \"4500\")}`,\n        {\n          method: \"post\",\n          body: JSON.stringify(options),\n        }\n      );\n\n      await this.updateBalances();\n      this.submitting = false;\n    },\n    async openImage(image) {\n      const newTab = window.open();\n      newTab.document.body.innerHTML = `<img src=\"${image}\">`;\n    },  \n    async createThread() {\n      this.submitting = true;\n      const value = {\n        creator: this.currentAccount,\n      };\n\n      const response = await this.$store.dispatch(\"octalmage.meep.meep/sendMsgCreateThread\", {\n        value,\n        fee: [],\n      }); \n\n      if (typeof response.data[0].data === 'undefined') {\n        await this.createPost(0);\n      } else {\n        await this.createPost(response.data[0].data[1]);\n      }\n      \n      this.submitting = false;\n    },\n    async createPost(threadId) {\n      console.log(\"threadID\", threadId);\n      if (!this.loggedIn) {\n        alert(\"Unlock your wallet!\");\n        return;\n      }\n\n      this.submitting = true;\n      const value = {\n        creator: this.currentAccount,\n        body: this.body,\n        thread: Number(threadId),\n        image: this.selectedFile,\n      };\n\n      const response = await this.$store.dispatch(\"octalmage.meep.meep/sendMsgCreatePost\", {\n        value,\n        fee: [],\n      });\n\n      console.log(response);\n      \n      this.body = \"\";\n      this.$refs.inputFile.value = '';\n      this.submitting = false;\n      this.selectedFile = '';\n    },\n    formatTimestamp(current, previous) {\n      var msPerMinute = 60 * 1000;\n      var msPerHour = msPerMinute * 60;\n      var msPerDay = msPerHour * 24;\n      var msPerMonth = msPerDay * 30;\n      var msPerYear = msPerDay * 365;\n\n      var elapsed = current - previous;\n\n      if (elapsed < msPerMinute) {\n        return Math.round(elapsed / 1000) + \" seconds ago\";\n      } else if (elapsed < msPerHour) {\n        return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n      } else if (elapsed < msPerDay) {\n        return Math.round(elapsed / msPerHour) + \" hours ago\";\n      } else if (elapsed < msPerMonth) {\n        return \"approximately \" + Math.round(elapsed / msPerDay) + \" days ago\";\n      } else if (elapsed < msPerYear) {\n        return (\n          \"approximately \" + Math.round(elapsed / msPerMonth) + \" months ago\"\n        );\n      } else {\n        return (\n          \"approximately \" + Math.round(elapsed / msPerYear) + \" years ago\"\n        );\n      }\n    },\n  },\n  async mounted() {\n    this.updateBalances();\n  },\n  // errorCaptured(err) {\n  // \talert('error!');\n  // \tconsole.error(err)\n  // \tthis.submitting = false;\n  // \treturn false\n  // }\n};\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=98c44eba\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Types\n\t},\n\t{ path: '/wallet', component: Index }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=3ec6f917&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseThread = { creator: \"\", id: 0, createdAt: 0 };\nexport const Thread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(24).int64(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.createdAt = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseMsgCreateUsername = { creator: \"\", name: \"\" };\nexport const MsgCreateUsername = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateUsername };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateUsernameResponse = { id: 0 };\nexport const MsgCreateUsernameResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateUsernameResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateUsernameResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateUsernameResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateUsername = { creator: \"\", id: 0, name: \"\" };\nexport const MsgUpdateUsername = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(26).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateUsername };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateUsernameResponse = {};\nexport const MsgUpdateUsernameResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateUsernameResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateUsernameResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateUsernameResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteUsername = { creator: \"\", id: 0 };\nexport const MsgDeleteUsername = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteUsername };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteUsernameResponse = {};\nexport const MsgDeleteUsernameResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteUsernameResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteUsernameResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteUsernameResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateThread = { creator: \"\" };\nexport const MsgCreateThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateThreadResponse = { id: 0 };\nexport const MsgCreateThreadResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateThread = { creator: \"\", id: 0 };\nexport const MsgUpdateThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateThreadResponse = {};\nexport const MsgUpdateThreadResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteThread = { creator: \"\", id: 0 };\nexport const MsgDeleteThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteThreadResponse = {};\nexport const MsgDeleteThreadResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePost = {\n    creator: \"\",\n    thread: 0,\n    body: \"\",\n    image: \"\",\n};\nexport const MsgCreatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.thread !== 0) {\n            writer.uint32(16).uint64(message.thread);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        if (message.image !== \"\") {\n            writer.uint32(34).string(message.image);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.thread = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = Number(object.thread);\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.thread !== undefined && (obj.thread = message.thread);\n        message.body !== undefined && (obj.body = message.body);\n        message.image !== undefined && (obj.image = message.image);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = object.thread;\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePostResponse = { id: 0 };\nexport const MsgCreatePostResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePost = { creator: \"\", id: 0, body: \"\" };\nexport const MsgUpdatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePostResponse = {};\nexport const MsgUpdatePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n};\nconst baseMsgDeletePost = { creator: \"\", id: 0 };\nexport const MsgDeletePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePostResponse = {};\nexport const MsgDeletePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateUsername(request) {\n        const data = MsgCreateUsername.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreateUsername\", data);\n        return promise.then((data) => MsgCreateUsernameResponse.decode(new Reader(data)));\n    }\n    UpdateUsername(request) {\n        const data = MsgUpdateUsername.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdateUsername\", data);\n        return promise.then((data) => MsgUpdateUsernameResponse.decode(new Reader(data)));\n    }\n    DeleteUsername(request) {\n        const data = MsgDeleteUsername.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeleteUsername\", data);\n        return promise.then((data) => MsgDeleteUsernameResponse.decode(new Reader(data)));\n    }\n    CreateThread(request) {\n        const data = MsgCreateThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreateThread\", data);\n        return promise.then((data) => MsgCreateThreadResponse.decode(new Reader(data)));\n    }\n    UpdateThread(request) {\n        const data = MsgUpdateThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdateThread\", data);\n        return promise.then((data) => MsgUpdateThreadResponse.decode(new Reader(data)));\n    }\n    DeleteThread(request) {\n        const data = MsgDeleteThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeleteThread\", data);\n        return promise.then((data) => MsgDeleteThreadResponse.decode(new Reader(data)));\n    }\n    CreatePost(request) {\n        const data = MsgCreatePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreatePost\", data);\n        return promise.then((data) => MsgCreatePostResponse.decode(new Reader(data)));\n    }\n    UpdatePost(request) {\n        const data = MsgUpdatePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdatePost\", data);\n        return promise.then((data) => MsgUpdatePostResponse.decode(new Reader(data)));\n    }\n    DeletePost(request) {\n        const data = MsgDeletePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeletePost\", data);\n        return promise.then((data) => MsgDeletePostResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}