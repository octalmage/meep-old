{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/post.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/username.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?d966","webpack:///./src/App.vue?889f","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/rest.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/index.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fadd","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?0fc0","webpack:///./src/views/Leaderboard.vue","webpack:///./src/views/Leaderboard.vue?7e6f","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/App.vue?17d4","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/thread.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/tx.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/tip.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","basePost","creator","createdAt","id","thread","body","image","Post","uint64","baseHeight","revisionNumber","revisionHeight","Height","baseUsername","Username","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","balances","watch","currentAccount","newAccount","updateBalances","methods","dispatch","options","subscribe","all","params","getters","created","addrPrefix","sdkVersion","ContentType","types","Registry","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","getStructure","template","structure","fields","field","V1State","getDefaultState","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getTypeStructure","actions","init","rootGetters","console","log","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","secure","path","format","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryClientConnections","method","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","queryClient","initTxClient","vuexGetters","initQueryClient","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","SpVuexError","QueryConnections","pagination","nextKey","next_values","prop","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","revision_number","revision_height","sendMsgConnectionOpenAck","msg","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","queryPostAll","queryPost","queryThreadAll","queryThread","queryTipAll","queryTip","queryUsernameAll","queryUsername","MsgUpdatePost","MsgCreateTip","MsgUpdateTip","MsgCreateUsername","MsgDeleteTip","MsgDeleteUsername","MsgDeletePost","MsgUpdateUsername","MsgCreateThread","MsgCreatePost","MsgDeleteThread","MsgUpdateThread","msgUpdatePost","msgCreateTip","msgUpdateTip","msgCreateUsername","msgDeleteTip","msgDeleteUsername","msgDeletePost","msgUpdateUsername","msgCreateThread","msgCreatePost","msgDeleteThread","msgUpdateThread","V1Beta1ProposalStatus","V1Beta1VoteOption","Tip","TipAll","UsernameAll","Thread","ThreadAll","PostAll","getTip","getTipAll","getUsername","getUsernameAll","getThread","getThreadAll","getPost","getPostAll","QueryTip","QueryTipAll","QueryUsername","QueryUsernameAll","QueryThread","QueryThreadAll","QueryPost","QueryPostAll","sendMsgUpdatePost","sendMsgCreateTip","sendMsgUpdateTip","sendMsgCreateUsername","sendMsgDeleteTip","sendMsgDeleteUsername","sendMsgDeletePost","sendMsgUpdateUsername","sendMsgCreateThread","sendMsgCreatePost","sendMsgDeleteThread","sendMsgUpdateThread","queryParams","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getParams","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","QueryParams","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","V1Order","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","V1Beta1BondStatus","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","CosmosCosmosSdkCosmosBaseV1Beta1","load","CosmosCosmosSdkIbcCoreConnectionV1","OctalmageMeepOctalmageMeepMeep","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","_depsLoaded","style","disabled","submitting","getMEEP","hasFunds","placeholder","$event","target","toLowerCase","createUsername","username","createThread","threads","postsForThread","post","openImage","src","tipsForPost","tipSubmitting","createTip","usernameForAddress","substr","formatTimestamp","now","createPost","selectedFile","threadId","posts","postId","tips","accumulator","currentValue","reverse","usernames","loggedIn","def","u","onFileChanged","event","file","files","FileReader","vm","onloadend","readAsDataURL","location","host","replace","newTab","open","document","innerHTML","alert","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","mounted","leaderboard","leader","balanceForUser","sortable","sort","a","b","routerHistory","createWebHistory","routes","component","Types","Index","Leaderboard","router","createRouter","history","app","createApp","App","directive","linkify","config","globalProperties","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseThread","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseMsgCreateTip","baseMsgUpdateTip","baseMsgDeleteTip","baseMsgCreateUsername","baseMsgUpdateUsername","baseMsgDeleteUsername","baseMsgCreateThread","baseMsgUpdateThread","baseMsgDeleteThread","baseMsgCreatePost","baseMsgUpdatePost","baseMsgDeletePost","baseTip","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.ababbfe3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst basePost = {\n    creator: \"\",\n    createdAt: 0,\n    id: 0,\n    thread: 0,\n    body: \"\",\n    image: \"\",\n};\nexport const Post = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(16).int64(message.createdAt);\n        }\n        if (message.id !== 0) {\n            writer.uint32(24).uint64(message.id);\n        }\n        if (message.thread !== 0) {\n            writer.uint32(32).uint64(message.thread);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(42).string(message.body);\n        }\n        if (message.image !== \"\") {\n            writer.uint32(50).string(message.image);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.createdAt = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.thread = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.body = reader.string();\n                    break;\n                case 6:\n                    message.image = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = Number(object.thread);\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        message.id !== undefined && (obj.id = message.id);\n        message.thread !== undefined && (obj.thread = message.thread);\n        message.body !== undefined && (obj.body = message.body);\n        message.image !== undefined && (obj.image = message.image);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = object.thread;\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseUsername = { creator: \"\", id: 0, name: \"\" };\nexport const Username = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(26).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUsername };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false,\n\t\t\tbalances: [],\n\t\t}\n\t},\n\twatch: {\n    // whenever question changes, this function will run\n    currentAccount: async function (newAccount) {\n      if (newAccount) {\n        this.updateBalances();\n      }\n    },\n  },\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tmethods: {\n\t\tasync updateBalances() {\n      if (this.currentAccount) {\n        await this.$store.dispatch(\"cosmos.bank.v1beta1/QueryAllBalances\", {\n          options: { subscribe: true, all: true },\n          params: { address: this.currentAccount },\n        });\n        this.balances =\n          this.$store.getters[\"cosmos.bank.v1beta1/getAllBalances\"]({\n            params: { address: this.currentAccount },\n          })?.balances ?? [];\n      } else {\n        this.balances = [];\n      }\n    },\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init', {  chainId: 'meep-1',\n  addrPrefix: 'meep',\n  sdkVersion: 'Stargate',})\n\t\tthis.initialized = true\n\n\t\tawait this.$store.dispatch(\"octalmage.meep.meep/QueryPostAll\",{options:{subscribe:true, all:true},params:{}})\n\t\tawait this.$store.dispatch(\"octalmage.meep.meep/QueryThreadAll\",{options:{subscribe:true, all:true},params:{}})\n\t\tawait this.$store.dispatch(\"octalmage.meep.meep/QueryUsernameAll\",{options:{subscribe:true, all:true},params:{}})\n\t\tawait this.$store.dispatch(\"octalmage.meep.meep/QueryTipAll\",{options:{subscribe:true, all:true},params:{}})\n\t},\n\t// errorCaptured(err) {\n\t// \tconsole.log(err)\n\t// \treturn false\n\t// }\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Home\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<!-- <SpLinkIcon link=\"/wallet\" text=\"Wallet\" icon=\"Transactions\" /> -->\n\t\t\t\t\t\t<SpLinkIcon link=\"/leaderboard\" text=\"Leaderboard\" icon=\"Docs\" />\n\t\t\t\t\t\t<!-- <div class=\"sp-dash\"></div> -->\n\t\t\t\t\t\t<!-- <SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />-->\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=711d149d\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=4eeacbda\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4eeacbda&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title meep/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPostAll\n         * @request GET:/octalmage/meep/meep/post\n         */\n        this.queryPostAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/post`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPost\n         * @request GET:/octalmage/meep/meep/post/{id}\n         */\n        this.queryPost = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/post/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryThreadAll\n         * @request GET:/octalmage/meep/meep/thread\n         */\n        this.queryThreadAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/thread`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryThread\n         * @request GET:/octalmage/meep/meep/thread/{id}\n         */\n        this.queryThread = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/thread/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTipAll\n         * @request GET:/octalmage/meep/meep/tip\n         */\n        this.queryTipAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/tip`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTip\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/octalmage/meep/meep/tip/{id}\n         */\n        this.queryTip = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/tip/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryUsernameAll\n         * @request GET:/octalmage/meep/meep/username\n         */\n        this.queryUsernameAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/username`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryUsername\n         * @request GET:/octalmage/meep/meep/username/{id}\n         */\n        this.queryUsername = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/username/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdatePost } from \"./types/meep/tx\";\nimport { MsgCreateTip } from \"./types/meep/tx\";\nimport { MsgUpdateTip } from \"./types/meep/tx\";\nimport { MsgCreateUsername } from \"./types/meep/tx\";\nimport { MsgDeleteTip } from \"./types/meep/tx\";\nimport { MsgDeleteUsername } from \"./types/meep/tx\";\nimport { MsgDeletePost } from \"./types/meep/tx\";\nimport { MsgUpdateUsername } from \"./types/meep/tx\";\nimport { MsgCreateThread } from \"./types/meep/tx\";\nimport { MsgCreatePost } from \"./types/meep/tx\";\nimport { MsgDeleteThread } from \"./types/meep/tx\";\nimport { MsgUpdateThread } from \"./types/meep/tx\";\nconst types = [\n    [\"/octalmage.meep.meep.MsgUpdatePost\", MsgUpdatePost],\n    [\"/octalmage.meep.meep.MsgCreateTip\", MsgCreateTip],\n    [\"/octalmage.meep.meep.MsgUpdateTip\", MsgUpdateTip],\n    [\"/octalmage.meep.meep.MsgCreateUsername\", MsgCreateUsername],\n    [\"/octalmage.meep.meep.MsgDeleteTip\", MsgDeleteTip],\n    [\"/octalmage.meep.meep.MsgDeleteUsername\", MsgDeleteUsername],\n    [\"/octalmage.meep.meep.MsgDeletePost\", MsgDeletePost],\n    [\"/octalmage.meep.meep.MsgUpdateUsername\", MsgUpdateUsername],\n    [\"/octalmage.meep.meep.MsgCreateThread\", MsgCreateThread],\n    [\"/octalmage.meep.meep.MsgCreatePost\", MsgCreatePost],\n    [\"/octalmage.meep.meep.MsgDeleteThread\", MsgDeleteThread],\n    [\"/octalmage.meep.meep.MsgUpdateThread\", MsgUpdateThread],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpdatePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdatePost\", value: data }),\n        msgCreateTip: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreateTip\", value: data }),\n        msgUpdateTip: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdateTip\", value: data }),\n        msgCreateUsername: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreateUsername\", value: data }),\n        msgDeleteTip: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeleteTip\", value: data }),\n        msgDeleteUsername: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeleteUsername\", value: data }),\n        msgDeletePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeletePost\", value: data }),\n        msgUpdateUsername: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdateUsername\", value: data }),\n        msgCreateThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreateThread\", value: data }),\n        msgCreatePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreatePost\", value: data }),\n        msgDeleteThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeleteThread\", value: data }),\n        msgUpdateThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdateThread\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Username } from \"./module/types/meep/username\";\nimport { Post } from \"./module/types/meep/post\";\nimport { Tip } from \"./module/types/meep/tip\";\nimport { Thread } from \"./module/types/meep/thread\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Tip: {},\n        TipAll: {},\n        Username: {},\n        UsernameAll: {},\n        Thread: {},\n        ThreadAll: {},\n        Post: {},\n        PostAll: {},\n        _Structure: {\n            Username: getStructure(Username.fromPartial({})),\n            Post: getStructure(Post.fromPartial({})),\n            Tip: getStructure(Tip.fromPartial({})),\n            Thread: getStructure(Thread.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTip: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Tip[JSON.stringify(params)] ?? {};\n        },\n        getTipAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TipAll[JSON.stringify(params)] ?? {};\n        },\n        getUsername: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Username[JSON.stringify(params)] ?? {};\n        },\n        getUsernameAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UsernameAll[JSON.stringify(params)] ?? {};\n        },\n        getThread: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Thread[JSON.stringify(params)] ?? {};\n        },\n        getThreadAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ThreadAll[JSON.stringify(params)] ?? {};\n        },\n        getPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Post[JSON.stringify(params)] ?? {};\n        },\n        getPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PostAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryTip({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTip(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryTip(key.id)).data;\n                commit('QUERY', { query: 'Tip', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTip', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTip']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTip', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTipAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTipAll(query)).data : (await (await initQueryClient(rootGetters)).queryTipAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryTipAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'TipAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTipAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTipAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTipAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUsername({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUsername(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryUsername(key.id)).data;\n                commit('QUERY', { query: 'Username', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUsername', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUsername']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUsername', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUsernameAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUsernameAll(query)).data : (await (await initQueryClient(rootGetters)).queryUsernameAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryUsernameAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'UsernameAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUsernameAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUsernameAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUsernameAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryThread({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryThread(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryThread(key.id)).data;\n                commit('QUERY', { query: 'Thread', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryThread', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getThread']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryThread', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryThreadAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryThreadAll(query)).data : (await (await initQueryClient(rootGetters)).queryThreadAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryThreadAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ThreadAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryThreadAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getThreadAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryThreadAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPost(key.id)).data;\n                commit('QUERY', { query: 'Post', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPostAll(query)).data : (await (await initQueryClient(rootGetters)).queryPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpdatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateTip({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateTip(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateTip:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTip:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateTip({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateTip(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateTip:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTip:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateUsername({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateUsername(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateUsername:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteTip({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteTip(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteTip:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTip:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteUsername({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteUsername(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteUsername:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateUsername({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateUsername(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateUsername:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpdatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateTip({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateTip(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateTip:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTip:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateTip({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateTip(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateTip:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTip:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateUsername({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateUsername(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateUsername:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteTip({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteTip(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteTip:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTip:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteUsername({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteUsername(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteUsername:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateUsername({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateUsername(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateUsername:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateUsername:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"5000000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"5000000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport OctalmageMeepOctalmageMeepMeep from './octalmage/meep/octalmage.meep.meep';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nexport default {\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    OctalmageMeepOctalmageMeepMeep: load(OctalmageMeepOctalmageMeepMeep, 'octalmage.meep.meep'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"sp-token-send__holder\">\n\t\t\t<div class=\"sp-component sp-assets__wrapper\">\n\t\t\t\t<SpAssets :balances=\"balances\" />\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\tbalances: function () {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\treturn (\n\t\t\t\t\tthis.$store.getters['cosmos.bank.v1beta1/getAllBalances']({\n\t\t\t\t\t\tparams: { address: this.address },\n\t\t\t\t\t})?.balances ?? []\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn []\n\t\t\t}\n\t\t},\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=0d920a52\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <div class=\"container\">\n      <!-- this line is used by starport scaffolding # 4 -->\n\n      <!-- <SpType modulePath=\"octalmage.meep.meep\" moduleType=\"Thread\"  /> -->\n      <h3>MEEP <span style=\"color: green\">({{balances.length > 0 ? Number(balances[0].amount) / 1000000 : 0}})</span></h3>\n      <div class=\"sp-voter__main sp-box sp-shadow sp-form-group\">\n        <div\n          class=\"sp-voter__main sp-box sp-shadow sp-form-group\"\n          v-show=\"!hasFunds && currentAccount\"\n        >\n          <sp-button :disabled=\"submitting\" @click=\"getMEEP\"\n            >Get 100 MEEP for free!</sp-button\n          >\n        </div>\n         <div\n          class=\"sp-voter__main sp-box sp-shadow sp-form-group\"\n          v-show=\"hasFunds && currentAccount && username === ''\"\n        >\n          <input\n            :disabled=\"submitting\"\n            class=\"sp-input\"\n            placeholder=\"\"\n            :value=\"name\" \n            @input=\"name = $event.target.value.toLowerCase()\"\n          /><br />\n          <sp-button :disabled=\"submitting\" @click=\"createUsername\">\n            Claim username (1 MEEP)\n          </sp-button>\n        </div>\n        <form class=\"sp-voter__main__form\">\n          <div class=\"sp-voter__main__rcpt__header sp-box-header\">\n            Create a new thread\n          </div>\n\n          <textarea\n            :disabled=\"submitting\"\n            class=\"sp-input\"\n            placeholder=\"\"\n            v-model=\"body\"\n          />\n          <input\n            :disabled=\"submitting\"\n            class=\"sp-input\"\n            placeholder=\"Image URL (optional)\"\n            v-model=\"image\"\n          /> <br /><br />\n          <sp-button\n            v-show=\"hasFunds\"\n            :disabled=\"submitting\"\n            @click=\"createThread\"\n            >Create (0.1 MEEP)</sp-button\n          >\n          <sp-button v-show=\"!currentAccount\" disabled>Sign in</sp-button>\n          <sp-button v-show=\"!hasFunds && currentAccount\" disabled\n            >You need MEEP</sp-button\n          >\n        </form>\n      </div>\n\n      <div class=\"sp-type-list sp-type__list\">\n        <h3>Threads</h3>\n        <br />\n        <div\n          style=\"margin-bottom: 1rem\"\n          v-for=\"thread in threads\"\n          v-bind:key=\"'thread' + thread.id\"\n          class=\"sp-type-list__main sp-box sp-shadow\"\n        >\n          <div class=\"sp-type-list__header sp-box-header\">POSTS</div>\n          <div\n            v-for=\"post in postsForThread(thread.id)\"\n            v-bind:key=\"'post' + post.id\"\n          >\n            <div class=\"sp-type-list__item\">\n              <div  v-show=\"!post.image\" class=\"sp-type-list__item__icon\">\n                <div class=\"sp-icon sp-icon-Docs\"></div>\n      \n              </div>\n              <div style=\"width: 300px;  margin-right: 12px;\" v-show=\"post.image\" >\n                  <img @click=\"openImage(post.image)\" style=\"max-width: 100%;\" :src=\"post.image\" v-show=\"post.image\" />\n                </div>\n              <div class=\"sp-type-list__item__details\">\n                                <div style=\"float: right\">\n                <strong>TIPS:</strong> {{tipsForPost(post.id)}} MEEP <br /><br />\n                <button v-show=\"post.creator !== currentAccount\" :disabled=\"tipSubmitting\" @click=\"createTip(post.id)\">Tip 1 MEEP</button>\n                </div>\n                User\n                <strong>{{ usernameForAddress(post.creator, post.creator.substr(-8)) }}</strong> said:<br /><br />\n                <div v-html=\"post.body\" v-linkified class=\"sp-type-list__item__details__field\" style=\"white-space: pre-line\" />\n                <br />\n                <strong>{{\n                  formatTimestamp(Date.now(), post.createdAt * 1000)\n                }}</strong>\n              </div>\n            </div>\n            <div class=\"sp-dashed-line\">&nbsp;</div>\n          </div>\n          <form class=\"sp-voter__main__form\">\n            <div class=\"sp-voter__main__rcpt__header sp-box-header\">\n              Create a new reply\n            </div>\n\n            <textarea\n              :disabled=\"submitting\"\n              class=\"sp-input\"\n              placeholder=\"\"\n              v-model=\"body\"\n            />\n          <input\n            :disabled=\"submitting\"\n            class=\"sp-input\"\n            placeholder=\"Image URL (optional)\"\n            v-model=\"image\"\n          /> <br /><br />\n            <sp-button\n              v-show=\"hasFunds\"\n              :disabled=\"submitting\"\n              @click=\"createPost(thread.id)\"\n              >Post (0.1 MEEP)</sp-button\n            >\n            <sp-button v-show=\"!currentAccount\" disabled>Sign in</sp-button>\n            <sp-button v-show=\"!hasFunds && currentAccount\" disabled\n              >You need MEEP</sp-button\n            >\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"Types\",\n  data() {\n    return {\n      body: \"\",\n      image: \"\",\n      submitting: false,\n      balances: [],\n      selectedFile: '',\n      name: '',\n      tipSubmitting: false,\n    };\n  },\n  watch: {\n    // whenever question changes, this function will run\n    currentAccount: async function (newAccount) {\n      if (newAccount) {\n        this.updateBalances();\n      }\n    },\n  },\n  computed: {\n    postsForThread() {\n      return (threadId) => this.posts.filter((p) => p.thread === threadId);\n    },\n    tipsForPost() {\n      return (postId) => this.tips.filter((p) => p.postId === postId).map(p => p.amount).reduce((accumulator, currentValue) => accumulator + currentValue, 0) / 1000000;\n    },\n    hasFunds() {\n      return this.balances.length > 0;\n    },\n    threads() {\n      const threads =\n        this.$store.getters[\"octalmage.meep.meep/getThreadAll\"]({\n          params: {},\n        })?.Thread ?? [];\n      \n      // threads.sort((a, b) => {\n      //   const maxa = Math.max.apply(Math, this.postsForThread(a.id).map(function(o) { return o.createdAt; }))\n      //   const maxb = Math.max.apply(Math, this.postsForThread(b.id).map(function(o) { return o.createdAt; }))\n      //   return maxb - maxa;\n      // });\n      // console.log(threads);\n      threads.reverse();\n      return threads;\n    },\n    tips() {\n      return this.$store.getters[\"octalmage.meep.meep/getTipAll\"]({\n          params: {},\n        })?.Tip ?? [];\n    },\n    posts() {\n      const posts =\n        this.$store.getters[\"octalmage.meep.meep/getPostAll\"]({\n          params: {},\n        })?.Post ?? [];\n      // console.log(posts);\n      return posts;\n    },\n    usernames() {\n      return this.$store.getters[\"octalmage.meep.meep/getUsernameAll\"]({\n          params: {},\n        })?.Username ?? [];\n    },\n    username() {\n      return this.usernameForAddress(this.currentAccount);\n    },\n    currentAccount() {\n      if (this._depsLoaded) {\n        if (this.loggedIn) {\n          return this.$store.getters[\"common/wallet/address\"];\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    loggedIn() {\n      if (this._depsLoaded) {\n        return this.$store.getters[\"common/wallet/loggedIn\"];\n      } else {\n        return false;\n      }\n    },\n  },\n  methods: {\n    usernameForAddress(address, def) {\n      const username = this.usernames.filter(u => u.creator === address);\n      return username.length > 0 ? username[0].name : (def || '');\n    },\n    onFileChanged(event) {\n      console.log('changed');\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      const vm = this;\n      reader.onloadend = function () {\n        vm.selectedFile = reader.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    async updateBalances() {\n      if (this.currentAccount) {\n        await this.$store.dispatch(\"cosmos.bank.v1beta1/QueryAllBalances\", {\n          options: { subscribe: true, all: true },\n          params: { address: this.currentAccount },\n        });\n        this.balances =\n          this.$store.getters[\"cosmos.bank.v1beta1/getAllBalances\"]({\n            params: { address: this.currentAccount },\n          })?.balances ?? [];\n      } else {\n        this.balances = [];\n      }\n    },\n    async getMEEP() {\n      this.submitting = true;\n      const options = {\n        address: this.currentAccount,\n        coins: [\"100000000umeep\"],\n      };\n\n      await fetch(\n        `http://${window.location.host\n          .replace(\"8081\", \"4500\")\n          .replace(\"8080\", \"4500\")\n          .replace(\"8888\", \"4500\")}`,\n        {\n          method: \"post\",\n          body: JSON.stringify(options),\n        }\n      );\n\n      await this.updateBalances();\n      this.submitting = false;\n    },\n    async openImage(image) {\n      const newTab = window.open();\n      newTab.document.body.innerHTML = `<img src=\"${image}\">`;\n    },  \n    async createThread() {\n      this.submitting = true;\n      const value = {\n        creator: this.currentAccount,\n        body: this.body,\n        image: this.image,\n      };\n\n      const response = await this.$store.dispatch(\"octalmage.meep.meep/sendMsgCreateThread\", {\n        value,\n        fee: [],\n      }); \n\n      console.log(response);\n      \n      this.body = \"\";\n      this.image = \"\";\n      this.submitting = false;\n\n      this.updateBalances();\n    },\n    async createTip(postId) {\n      // 1000000000000000000\n      if (!this.loggedIn) {\n        alert(\"Unlock your wallet!\");\n        return;\n      }\n      this.tipSubmitting = true;\n      // this.submitting = true;\n      const value = {\n        postId,\n        creator: this.currentAccount,\n        amount: 1 * 1000000,\n      };\n\n      const response = await this.$store.dispatch(\"octalmage.meep.meep/sendMsgCreateTip\", {\n        value,\n        fee: [],\n      });\n\n      console.log(response);\n      this.tipSubmitting = false;\n      this.updateBalances();\n    },\n    async createUsername() {\n      if (!this.loggedIn) {\n        alert(\"Unlock your wallet!\");\n        return;\n      }\n\n      this.submitting = true;\n      const value = {\n        creator: this.currentAccount,\n        name: this.name,\n      };\n\n      const response = await this.$store.dispatch(\"octalmage.meep.meep/sendMsgCreateUsername\", {\n        value,\n        fee: [],\n      });\n\n      console.log(response);\n      \n      this.name = \"\";\n      this.submitting = false;\n      this.updateBalances();\n    },\n    async createPost(threadId) {\n      console.log(\"threadID\", threadId);\n      if (!this.loggedIn) {\n        alert(\"Unlock your wallet!\");\n        return;\n      }\n\n      this.submitting = true;\n      const value = {\n        creator: this.currentAccount,\n        body: this.body,\n        thread: Number(threadId),\n        image: this.image,\n      };\n\n      const response = await this.$store.dispatch(\"octalmage.meep.meep/sendMsgCreatePost\", {\n        value,\n        fee: [],\n      });\n\n      console.log(response);\n      \n      this.body = \"\";\n      this.image = \"\";\n      this.submitting = false;\n      this.updateBalances();\n    },\n    formatTimestamp(current, previous) {\n      var msPerMinute = 60 * 1000;\n      var msPerHour = msPerMinute * 60;\n      var msPerDay = msPerHour * 24;\n      var msPerMonth = msPerDay * 30;\n      var msPerYear = msPerDay * 365;\n\n      var elapsed = current - previous;\n\n      if (elapsed < msPerMinute) {\n        return Math.round(elapsed / 1000) + \" seconds ago\";\n      } else if (elapsed < msPerHour) {\n        return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n      } else if (elapsed < msPerDay) {\n        return Math.round(elapsed / msPerHour) + \" hours ago\";\n      } else if (elapsed < msPerMonth) {\n        return \"approximately \" + Math.round(elapsed / msPerDay) + \" days ago\";\n      } else if (elapsed < msPerYear) {\n        return (\n          \"approximately \" + Math.round(elapsed / msPerMonth) + \" months ago\"\n        );\n      } else {\n        return (\n          \"approximately \" + Math.round(elapsed / msPerYear) + \" years ago\"\n        );\n      }\n    },\n  },\n  async mounted() {\n    this.updateBalances();\n  },\n  // errorCaptured(err) {\n  // \talert('error!');\n  // \tconsole.error(err)\n  // \tthis.submitting = false;\n  // \treturn false\n  // }\n};\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=da28074c\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<h1>Leaderboard</h1>\n\t\t\t<table style=\"border: 1px solid black; border-collapse: collapse; width: 400px; font-size: 22px\">\n\t\t\t\t\t<tr style=\"border: 1px solid black;\">\n\t\t\t\t\t<td style=\"border: 1px solid black;padding: .5em;\"><strong>Place</strong></td>\n\t\t\t\t\t<td style=\"border: 1px solid black;padding: .5em;\"><strong>Username</strong></td>\n\t\t\t\t\t<td style=\"border: 1px solid black;padding: .5em;\"><strong>MEEP</strong></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr style=\"border: 1px solid black;\" v-for=\"(leader, index) in leaderboard\" :key=\"leader[0]\">\n\t\t\t\t\t<td style=\"border: 1px solid black;padding: .5em;\">{{index + 1}}</td>\n\t\t\t\t\t<td style=\"border: 1px solid black;padding: .5em;\">{{usernameForAddress(leader[0])}}</td>\n\t\t\t\t\t<td style=\"border: 1px solid black;padding: .5em;\">{{leader[1]}}</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Leaderboard',\n\tdata: () => ({\n\t\tleaderboard: [],\n\t}),\n\tcomputed: {\n\t\tbalances: function () {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\treturn (\n\t\t\t\t\tthis.$store.getters['cosmos.bank.v1beta1/getAllBalances']({\n\t\t\t\t\t\tparams: {},\n\t\t\t\t\t})?.balances ?? []\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn []\n\t\t\t}\n\t\t},\n\t\tusernames() {\n      return this.$store.getters[\"octalmage.meep.meep/getUsernameAll\"]({\n          params: {},\n        })?.Username ?? [];\n    },\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t},\n\t},\n\tmethods: {\n\t\tusernameForAddress(address, def) {\n      const username = this.usernames.filter(u => u.creator === address);\n      return username.length > 0 ? username[0].name : (def || '');\n    },\n\t\tasync balanceForUser(address) {\n\t\t\t  return this.$store.dispatch(\"cosmos.bank.v1beta1/QueryAllBalances\", {\n          options: { subscribe: false, all: true },\n          params: { address },\n        });\n\t\t}\n\t},\n\tasync mounted() {\n\t\tconst leaderboard = {};\n\t\tconst usernames = this.usernames;\n\t\tfor (let username of usernames) {\n\t\t\tconst balance = await this.balanceForUser(username.creator);\n\t\t\tleaderboard[username.creator] = Number(balance.balances[0].amount) / 1000000;\n\t\t}\n\t\tconst sortable = Object.entries(leaderboard).sort(([,a],[,b]) => b-a)\n\t\tthis.leaderboard = sortable;\n\t}\n}\n</script>\n","import { render } from \"./Leaderboard.vue?vue&type=template&id=6b19ecf7\"\nimport script from \"./Leaderboard.vue?vue&type=script&lang=js\"\nexport * from \"./Leaderboard.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue';\nimport Types from '@/views/Types.vue';\nimport Leaderboard from '@/views/Leaderboard.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Types\n\t},\n\t{ path: '/wallet', component: Index },\n\t{ path: '/leaderboard', component: Leaderboard },\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\nimport linkify from 'vue-linkify'\n\nconst app = createApp(App)\napp.directive('linkified', linkify)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=4eeacbda&lang=css\"","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseThread = { creator: \"\", id: 0, createdAt: 0 };\nexport const Thread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(24).int64(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.createdAt = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseMsgCreateTip = { creator: \"\", postId: 0, amount: 0 };\nexport const MsgCreateTip = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.postId !== 0) {\n            writer.uint32(16).uint64(message.postId);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(24).int32(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateTip };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.postId = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.amount = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateTip };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.postId !== undefined && object.postId !== null) {\n            message.postId = Number(object.postId);\n        }\n        else {\n            message.postId = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.postId !== undefined && (obj.postId = message.postId);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateTip };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.postId !== undefined && object.postId !== null) {\n            message.postId = object.postId;\n        }\n        else {\n            message.postId = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateTipResponse = { id: 0 };\nexport const MsgCreateTipResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateTipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateTipResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateTipResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateTip = { creator: \"\", id: 0, postId: 0, amount: 0 };\nexport const MsgUpdateTip = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.postId !== 0) {\n            writer.uint32(24).uint64(message.postId);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(32).int32(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateTip };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.postId = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.amount = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateTip };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.postId !== undefined && object.postId !== null) {\n            message.postId = Number(object.postId);\n        }\n        else {\n            message.postId = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.postId !== undefined && (obj.postId = message.postId);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateTip };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.postId !== undefined && object.postId !== null) {\n            message.postId = object.postId;\n        }\n        else {\n            message.postId = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateTipResponse = {};\nexport const MsgUpdateTipResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateTipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateTipResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateTipResponse };\n        return message;\n    },\n};\nconst baseMsgDeleteTip = { creator: \"\", id: 0 };\nexport const MsgDeleteTip = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteTip };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteTip };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteTip };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteTipResponse = {};\nexport const MsgDeleteTipResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteTipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteTipResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteTipResponse };\n        return message;\n    },\n};\nconst baseMsgCreateUsername = { creator: \"\", name: \"\" };\nexport const MsgCreateUsername = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateUsername };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateUsernameResponse = { id: 0 };\nexport const MsgCreateUsernameResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateUsernameResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateUsernameResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateUsernameResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateUsername = { creator: \"\", id: 0, name: \"\" };\nexport const MsgUpdateUsername = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(26).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateUsername };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateUsernameResponse = {};\nexport const MsgUpdateUsernameResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateUsernameResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateUsernameResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateUsernameResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteUsername = { creator: \"\", id: 0 };\nexport const MsgDeleteUsername = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteUsername };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteUsername };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteUsernameResponse = {};\nexport const MsgDeleteUsernameResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteUsernameResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteUsernameResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteUsernameResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateThread = { creator: \"\", body: \"\", image: \"\" };\nexport const MsgCreateThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(18).string(message.body);\n        }\n        if (message.image !== \"\") {\n            writer.uint32(26).string(message.image);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.body = reader.string();\n                    break;\n                case 3:\n                    message.image = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.body !== undefined && (obj.body = message.body);\n        message.image !== undefined && (obj.image = message.image);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateThreadResponse = { id: 0 };\nexport const MsgCreateThreadResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateThread = { creator: \"\", id: 0 };\nexport const MsgUpdateThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateThreadResponse = {};\nexport const MsgUpdateThreadResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteThread = { creator: \"\", id: 0 };\nexport const MsgDeleteThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteThreadResponse = {};\nexport const MsgDeleteThreadResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePost = {\n    creator: \"\",\n    thread: 0,\n    body: \"\",\n    image: \"\",\n};\nexport const MsgCreatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.thread !== 0) {\n            writer.uint32(16).uint64(message.thread);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        if (message.image !== \"\") {\n            writer.uint32(34).string(message.image);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.thread = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = Number(object.thread);\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.thread !== undefined && (obj.thread = message.thread);\n        message.body !== undefined && (obj.body = message.body);\n        message.image !== undefined && (obj.image = message.image);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = object.thread;\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePostResponse = { id: 0 };\nexport const MsgCreatePostResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePost = { creator: \"\", id: 0, body: \"\" };\nexport const MsgUpdatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePostResponse = {};\nexport const MsgUpdatePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n};\nconst baseMsgDeletePost = { creator: \"\", id: 0 };\nexport const MsgDeletePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePostResponse = {};\nexport const MsgDeletePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateTip(request) {\n        const data = MsgCreateTip.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreateTip\", data);\n        return promise.then((data) => MsgCreateTipResponse.decode(new Reader(data)));\n    }\n    UpdateTip(request) {\n        const data = MsgUpdateTip.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdateTip\", data);\n        return promise.then((data) => MsgUpdateTipResponse.decode(new Reader(data)));\n    }\n    DeleteTip(request) {\n        const data = MsgDeleteTip.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeleteTip\", data);\n        return promise.then((data) => MsgDeleteTipResponse.decode(new Reader(data)));\n    }\n    CreateUsername(request) {\n        const data = MsgCreateUsername.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreateUsername\", data);\n        return promise.then((data) => MsgCreateUsernameResponse.decode(new Reader(data)));\n    }\n    UpdateUsername(request) {\n        const data = MsgUpdateUsername.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdateUsername\", data);\n        return promise.then((data) => MsgUpdateUsernameResponse.decode(new Reader(data)));\n    }\n    DeleteUsername(request) {\n        const data = MsgDeleteUsername.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeleteUsername\", data);\n        return promise.then((data) => MsgDeleteUsernameResponse.decode(new Reader(data)));\n    }\n    CreateThread(request) {\n        const data = MsgCreateThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreateThread\", data);\n        return promise.then((data) => MsgCreateThreadResponse.decode(new Reader(data)));\n    }\n    UpdateThread(request) {\n        const data = MsgUpdateThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdateThread\", data);\n        return promise.then((data) => MsgUpdateThreadResponse.decode(new Reader(data)));\n    }\n    DeleteThread(request) {\n        const data = MsgDeleteThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeleteThread\", data);\n        return promise.then((data) => MsgDeleteThreadResponse.decode(new Reader(data)));\n    }\n    CreatePost(request) {\n        const data = MsgCreatePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreatePost\", data);\n        return promise.then((data) => MsgCreatePostResponse.decode(new Reader(data)));\n    }\n    UpdatePost(request) {\n        const data = MsgUpdatePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdatePost\", data);\n        return promise.then((data) => MsgUpdatePostResponse.decode(new Reader(data)));\n    }\n    DeletePost(request) {\n        const data = MsgDeletePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeletePost\", data);\n        return promise.then((data) => MsgDeletePostResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseTip = { creator: \"\", id: 0, postId: 0, amount: 0 };\nexport const Tip = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.postId !== 0) {\n            writer.uint32(24).uint64(message.postId);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(32).int32(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTip };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.postId = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.amount = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTip };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.postId !== undefined && object.postId !== null) {\n            message.postId = Number(object.postId);\n        }\n        else {\n            message.postId = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.postId !== undefined && (obj.postId = message.postId);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTip };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.postId !== undefined && object.postId !== null) {\n            message.postId = object.postId;\n        }\n        else {\n            message.postId = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}