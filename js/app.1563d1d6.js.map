{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/post.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?d966","webpack:///./src/App.vue?889f","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/rest.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/index.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fadd","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?0fc0","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?0d02","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/thread.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/octalmage/meep/octalmage.meep.meep/module/types/meep/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","basePost","creator","createdAt","id","thread","body","image","Post","uint64","baseHeight","revisionNumber","revisionHeight","Height","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","addrPrefix","sdkVersion","options","subscribe","all","params","ContentType","types","Registry","getStructure","template","structure","fields","field","getDefaultState","_Structure","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","_Subscriptions","Set","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getters","getTypeStructure","actions","init","rootGetters","console","log","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","secure","path","format","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryAllEvidence","method","queryEvidence","MsgSubmitEvidence","registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSubmitEvidence","queryClient","initTxClient","vuexGetters","initQueryClient","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","SpVuexError","QueryAllEvidence","pagination","nextKey","next_values","prop","sendMsgSubmitEvidence","msg","queryDenomTraces","queryDenomTrace","queryParams","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","getParams","QueryDenomTrace","QueryDenomTraces","QueryParams","sendMsgTransfer","queryPostAll","queryPost","queryThreadAll","queryThread","MsgUpdatePost","MsgUpdateThread","MsgCreatePost","MsgDeletePost","MsgCreateThread","MsgDeleteThread","msgUpdatePost","msgUpdateThread","msgCreatePost","msgDeletePost","msgCreateThread","msgDeleteThread","Thread","ThreadAll","PostAll","getThread","getThreadAll","getPost","getPostAll","QueryThread","QueryThreadAll","QueryPost","QueryPostAll","sendMsgUpdatePost","sendMsgUpdateThread","sendMsgCreatePost","sendMsgDeletePost","sendMsgCreateThread","sendMsgDeleteThread","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","V1State","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","revision_number","revision_height","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","V1Beta1ProposalStatus","V1Beta1VoteOption","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","V1Order","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","V1Beta1BondStatus","sendMsgVerifyInvariant","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","CosmosCosmosSdkCosmosBaseAbciV1Beta1","load","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","OctalmageMeepOctalmageMeepMeep","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","balances","_depsLoaded","disabled","submitting","getMEEP","hasFunds","currentAccount","placeholder","createThread","threads","style","postsForThread","post","_","substr","formatTimestamp","now","createPost","watch","newAccount","updateBalances","threadId","posts","reverse","loggedIn","methods","location","host","replace","alert","current","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","Math","round","mounted","routerHistory","createWebHistory","routes","component","Types","Index","router","createRouter","history","app","createApp","App","config","globalProperties","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseThread","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseMsgCreateThread","baseMsgUpdateThread","baseMsgDeleteThread","baseMsgCreatePost","baseMsgUpdatePost","baseMsgDeletePost","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.1563d1d6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst basePost = {\n    creator: \"\",\n    createdAt: 0,\n    id: 0,\n    thread: 0,\n    body: \"\",\n    image: \"\",\n};\nexport const Post = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(16).int64(message.createdAt);\n        }\n        if (message.id !== 0) {\n            writer.uint32(24).uint64(message.id);\n        }\n        if (message.thread !== 0) {\n            writer.uint32(32).uint64(message.thread);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(42).string(message.body);\n        }\n        if (message.image !== \"\") {\n            writer.uint32(50).string(message.image);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.createdAt = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.thread = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.body = reader.string();\n                    break;\n                case 6:\n                    message.image = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = Number(object.thread);\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        message.id !== undefined && (obj.id = message.id);\n        message.thread !== undefined && (obj.thread = message.thread);\n        message.body !== undefined && (obj.body = message.body);\n        message.image !== undefined && (obj.image = message.image);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = object.thread;\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init', {  chainId: 'meep-1',\n  addrPrefix: 'meep',\n  sdkVersion: 'Stargate',})\n\t\tthis.initialized = true\n\n\t\tawait this.$store.dispatch(\"octalmage.meep.meep/QueryPostAll\",{options:{subscribe:true, all:true},params:{}})\n\t\tawait this.$store.dispatch(\"octalmage.meep.meep/QueryThreadAll\",{options:{subscribe:true, all:true},params:{}})\n\t},\n\t// errorCaptured(err) {\n\t// \tconsole.log(err)\n\t// \treturn false\n\t// }\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Home\" icon=\"Home\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/wallet\" text=\"Wallet\" icon=\"Money\" />\n\t\t\t\t\t\t<!-- <div class=\"sp-dash\"></div> -->\n\t\t\t\t\t\t<!-- <SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />-->\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=3176ec15\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=3ec6f917\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3ec6f917&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title meep/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPostAll\n         * @request GET:/octalmage/meep/meep/post\n         */\n        this.queryPostAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/post`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPost\n         * @request GET:/octalmage/meep/meep/post/{id}\n         */\n        this.queryPost = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/post/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryThreadAll\n         * @request GET:/octalmage/meep/meep/thread\n         */\n        this.queryThreadAll = (query, params = {}) => this.request({\n            path: `/octalmage/meep/meep/thread`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryThread\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/octalmage/meep/meep/thread/{id}\n         */\n        this.queryThread = (id, params = {}) => this.request({\n            path: `/octalmage/meep/meep/thread/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdatePost } from \"./types/meep/tx\";\nimport { MsgUpdateThread } from \"./types/meep/tx\";\nimport { MsgCreatePost } from \"./types/meep/tx\";\nimport { MsgDeletePost } from \"./types/meep/tx\";\nimport { MsgCreateThread } from \"./types/meep/tx\";\nimport { MsgDeleteThread } from \"./types/meep/tx\";\nconst types = [\n    [\"/octalmage.meep.meep.MsgUpdatePost\", MsgUpdatePost],\n    [\"/octalmage.meep.meep.MsgUpdateThread\", MsgUpdateThread],\n    [\"/octalmage.meep.meep.MsgCreatePost\", MsgCreatePost],\n    [\"/octalmage.meep.meep.MsgDeletePost\", MsgDeletePost],\n    [\"/octalmage.meep.meep.MsgCreateThread\", MsgCreateThread],\n    [\"/octalmage.meep.meep.MsgDeleteThread\", MsgDeleteThread],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpdatePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdatePost\", value: data }),\n        msgUpdateThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgUpdateThread\", value: data }),\n        msgCreatePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreatePost\", value: data }),\n        msgDeletePost: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeletePost\", value: data }),\n        msgCreateThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgCreateThread\", value: data }),\n        msgDeleteThread: (data) => ({ typeUrl: \"/octalmage.meep.meep.MsgDeleteThread\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Post } from \"./module/types/meep/post\";\nimport { Thread } from \"./module/types/meep/thread\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Thread: {},\n        ThreadAll: {},\n        Post: {},\n        PostAll: {},\n        _Structure: {\n            Post: getStructure(Post.fromPartial({})),\n            Thread: getStructure(Thread.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getThread: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Thread[JSON.stringify(params)] ?? {};\n        },\n        getThreadAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ThreadAll[JSON.stringify(params)] ?? {};\n        },\n        getPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Post[JSON.stringify(params)] ?? {};\n        },\n        getPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PostAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryThread({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryThread(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryThread(key.id)).data;\n                commit('QUERY', { query: 'Thread', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryThread', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getThread']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryThread', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryThreadAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryThreadAll(query)).data : (await (await initQueryClient(rootGetters)).queryThreadAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryThreadAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ThreadAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryThreadAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getThreadAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryThreadAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPost(key.id)).data;\n                commit('QUERY', { query: 'Post', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPostAll(query)).data : (await (await initQueryClient(rootGetters)).queryPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpdatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteThread({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteThread(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpdatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateThread:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateThread:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteThread({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteThread(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteThread:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://159.65.103.150:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://159.65.103.150:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport OctalmageMeepOctalmageMeepMeep from './octalmage/meep/octalmage.meep.meep';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nexport default {\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    OctalmageMeepOctalmageMeepMeep: load(OctalmageMeepOctalmageMeepMeep, 'octalmage.meep.meep'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"sp-token-send__holder\">\n\t\t\t<div class=\"sp-component sp-assets__wrapper\">\n\t\t\t\t<SpAssets :balances=\"balances\" />\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\tbalances: function () {\n\t\t\tif (this._depsLoaded) {\n\t\t\t\treturn (\n\t\t\t\t\tthis.$store.getters['cosmos.bank.v1beta1/getAllBalances']({\n\t\t\t\t\t\tparams: { address: this.address },\n\t\t\t\t\t})?.balances ?? []\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn []\n\t\t\t}\n\t\t},\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=0d920a52\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <div class=\"container\">\n      <!-- this line is used by starport scaffolding # 4 -->\n      <!-- <SpType modulePath=\"octalmage.meep.meep\" moduleType=\"Thread\"  /> -->\n      <h3>MEEP</h3>\n      <div class=\"sp-voter__main sp-box sp-shadow sp-form-group\">\n        <div\n          class=\"sp-voter__main sp-box sp-shadow sp-form-group\"\n          v-show=\"!hasFunds && currentAccount\"\n        >\n          <sp-button :disabled=\"submitting\" @click=\"getMEEP\"\n            >Get 5 MEEP for free!</sp-button\n          >\n        </div>\n        <form class=\"sp-voter__main__form\">\n          <div class=\"sp-voter__main__rcpt__header sp-box-header\">\n            Create a new thread\n          </div>\n\n          <textarea\n            :disabled=\"submitting\"\n            class=\"sp-input\"\n            placeholder=\"\"\n            v-model=\"body\"\n          />\n\n          <sp-button\n            v-show=\"hasFunds\"\n            :disabled=\"submitting\"\n            @click=\"createThread\"\n            >Create</sp-button\n          >\n          <sp-button v-show=\"!currentAccount\" disabled>Sign in</sp-button>\n          <sp-button v-show=\"!hasFunds && currentAccount\" disabled\n            >You need MEEP</sp-button\n          >\n        </form>\n      </div>\n\n      <div class=\"sp-type-list sp-type__list\">\n        <h3>Threads</h3>\n        <br />\n        <div\n          style=\"margin-bottom: 1rem\"\n          v-for=\"thread in threads\"\n          v-bind:key=\"'thread' + thread.id\"\n          class=\"sp-type-list__main sp-box sp-shadow\"\n        >\n          <div class=\"sp-type-list__header sp-box-header\">POSTS</div>\n          <div\n            v-for=\"(post, _, index) in postsForThread(thread.id)\"\n            v-bind:key=\"'post' + post.id\"\n          >\n            <div class=\"sp-type-list__item\">\n              <div class=\"sp-type-list__item__icon\">\n                <div class=\"sp-icon sp-icon-Docs\"></div>\n              </div>\n              <div class=\"sp-type-list__item__details\">\n                User <strong>{{ post.creator.substr(-8) }}</strong> said:<br /><br />\n                <div class=\"sp-type-list__item__details__field\">\n                  {{ post.body }}\n                </div>\n                <br />\n                <strong>{{ formatTimestamp(Date.now(), post.createdAt) }}</strong>\n              </div>\n            </div>\n            <div class=\"sp-dashed-line\">&nbsp;</div>\n          </div>\n          <form class=\"sp-voter__main__form\">\n            <div class=\"sp-voter__main__rcpt__header sp-box-header\">\n              Create a new reply\n            </div>\n\n            <textarea\n              :disabled=\"submitting\"\n              class=\"sp-input\"\n              placeholder=\"\"\n              v-model=\"body\"\n            />\n\n            <sp-button\n              v-show=\"hasFunds\"\n              :disabled=\"submitting\"\n              @click=\"createPost(thread.id)\"\n              >Post</sp-button\n            >\n            <sp-button v-show=\"!currentAccount\" disabled>Sign in</sp-button>\n            <sp-button v-show=\"!hasFunds && currentAccount\" disabled\n              >You need MEEP</sp-button\n            >\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"Types\",\n  data() {\n    return {\n      body: \"\",\n      submitting: false,\n      balances: [],\n    };\n  },\n  watch: {\n    // whenever question changes, this function will run\n    currentAccount: async function (newAccount) {\n      if (newAccount) {\n        this.updateBalances();\n      }\n    },\n  },\n  computed: {\n    postsForThread() {\n      return (threadId) => this.posts.filter((p) => p.thread === threadId);\n    },\n    hasFunds() {\n      return this.balances.length > 0;\n    },\n    threads() {\n      const threads =\n        this.$store.getters[\"octalmage.meep.meep/getThreadAll\"]({\n          params: {},\n        })?.Thread ?? [];\n\n      threads.reverse();\n      return threads;\n    },\n    posts() {\n      const posts =\n        this.$store.getters[\"octalmage.meep.meep/getPostAll\"]({\n          params: {},\n        })?.Post ?? [];\n\n      return posts;\n    },\n    currentAccount() {\n      if (this._depsLoaded) {\n        if (this.loggedIn) {\n          return this.$store.getters[\"common/wallet/address\"];\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    },\n    loggedIn() {\n      if (this._depsLoaded) {\n        return this.$store.getters[\"common/wallet/loggedIn\"];\n      } else {\n        return false;\n      }\n    },\n  },\n  methods: {\n    async updateBalances() {\n      if (this.currentAccount) {\n        await this.$store.dispatch(\"cosmos.bank.v1beta1/QueryAllBalances\", {\n          options: { subscribe: true, all: true },\n          params: { address: this.currentAccount },\n        });\n        this.balances =\n          this.$store.getters[\"cosmos.bank.v1beta1/getAllBalances\"]({\n            params: { address: this.currentAccount },\n          })?.balances ?? [];\n      } else {\n        this.balances = [];\n      }\n    },\n    async getMEEP() {\n      this.submitting = true;\n      const options = {\n        address: this.currentAccount,\n        coins: [\"5meep\"],\n      };\n\n      await fetch(\n        `http://${window.location.host\n          .replace(\"8081\", \"4500\")\n          .replace(\"8888\", \"4500\")}`,\n        {\n          method: \"post\",\n          body: JSON.stringify(options),\n        }\n      );\n\n      await this.updateBalances();\n      this.submitting = false;\n    },\n    async createThread() {\n      this.submitting = true;\n      const value = {\n        creator: this.currentAccount,\n      };\n\n      \n      let threadId = 0;\n\n      if (this.threads.length > 0) {\n        threadId = 1 + Number(this.threads[0].id);\n      }\n\n      await this.$store.dispatch(\"octalmage.meep.meep/sendMsgCreateThread\", {\n        value,\n        fee: [],\n      });\n\n      await this.$store.dispatch(\"octalmage.meep.meep/QueryThreadAll\", {\n        options: { subscribe: true, all: true },\n        params: {},\n      });\n\n      \n      await this.createPost(threadId);\n    },\n    async createPost(threadId) {\n      console.log(\"threadID\", threadId);\n      if (!this.loggedIn) {\n        alert(\"Unlock your wallet!\");\n        return;\n      }\n\n      this.submitting = true;\n      const value = {\n        creator: this.currentAccount,\n        body: this.body,\n        thread: Number(threadId),\n      };\n\n      await this.$store.dispatch(\"octalmage.meep.meep/sendMsgCreatePost\", {\n        value,\n        fee: [],\n      });\n      this.body = \"\";\n      this.submitting = false;\n    },\n    formatTimestamp(current, previous) {\n      var msPerMinute = 60 * 1000;\n      var msPerHour = msPerMinute * 60;\n      var msPerDay = msPerHour * 24;\n      var msPerMonth = msPerDay * 30;\n      var msPerYear = msPerDay * 365;\n\n      var elapsed = current - previous;\n\n      if (elapsed < msPerMinute) {\n        return Math.round(elapsed / 1000) + \" seconds ago\";\n      } else if (elapsed < msPerHour) {\n        return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n      } else if (elapsed < msPerDay) {\n        return Math.round(elapsed / msPerHour) + \" hours ago\";\n      } else if (elapsed < msPerMonth) {\n        return \"approximately \" + Math.round(elapsed / msPerDay) + \" days ago\";\n      } else if (elapsed < msPerYear) {\n        return (\n          \"approximately \" + Math.round(elapsed / msPerMonth) + \" months ago\"\n        );\n      } else {\n        return (\n          \"approximately \" + Math.round(elapsed / msPerYear) + \" years ago\"\n        );\n      }\n    },\n  },\n  async mounted() {\n    this.updateBalances();\n  },\n  // errorCaptured(err) {\n  // \talert('error!');\n  // \tconsole.error(err)\n  // \tthis.submitting = false;\n  // \treturn false\n  // }\n};\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=2c7c6a50\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Types\n\t},\n\t{ path: '/wallet', component: Index }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=3ec6f917&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseThread = { creator: \"\", id: 0, createdAt: 0 };\nexport const Thread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(24).int64(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.createdAt = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"octalmage.meep.meep\";\nconst baseMsgCreateThread = { creator: \"\" };\nexport const MsgCreateThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateThreadResponse = { id: 0 };\nexport const MsgCreateThreadResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateThreadResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateThread = { creator: \"\", id: 0 };\nexport const MsgUpdateThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateThreadResponse = {};\nexport const MsgUpdateThreadResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateThreadResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteThread = { creator: \"\", id: 0 };\nexport const MsgDeleteThread = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteThread };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteThread };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteThreadResponse = {};\nexport const MsgDeleteThreadResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteThreadResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePost = {\n    creator: \"\",\n    thread: 0,\n    body: \"\",\n    image: \"\",\n};\nexport const MsgCreatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.thread !== 0) {\n            writer.uint32(16).uint64(message.thread);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        if (message.image !== \"\") {\n            writer.uint32(34).string(message.image);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.thread = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = Number(object.thread);\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.thread !== undefined && (obj.thread = message.thread);\n        message.body !== undefined && (obj.body = message.body);\n        message.image !== undefined && (obj.image = message.image);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.thread !== undefined && object.thread !== null) {\n            message.thread = object.thread;\n        }\n        else {\n            message.thread = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePostResponse = { id: 0 };\nexport const MsgCreatePostResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePost = { creator: \"\", id: 0, body: \"\" };\nexport const MsgUpdatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePostResponse = {};\nexport const MsgUpdatePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n};\nconst baseMsgDeletePost = { creator: \"\", id: 0 };\nexport const MsgDeletePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePostResponse = {};\nexport const MsgDeletePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateThread(request) {\n        const data = MsgCreateThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreateThread\", data);\n        return promise.then((data) => MsgCreateThreadResponse.decode(new Reader(data)));\n    }\n    UpdateThread(request) {\n        const data = MsgUpdateThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdateThread\", data);\n        return promise.then((data) => MsgUpdateThreadResponse.decode(new Reader(data)));\n    }\n    DeleteThread(request) {\n        const data = MsgDeleteThread.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeleteThread\", data);\n        return promise.then((data) => MsgDeleteThreadResponse.decode(new Reader(data)));\n    }\n    CreatePost(request) {\n        const data = MsgCreatePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"CreatePost\", data);\n        return promise.then((data) => MsgCreatePostResponse.decode(new Reader(data)));\n    }\n    UpdatePost(request) {\n        const data = MsgUpdatePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"UpdatePost\", data);\n        return promise.then((data) => MsgUpdatePostResponse.decode(new Reader(data)));\n    }\n    DeletePost(request) {\n        const data = MsgDeletePost.encode(request).finish();\n        const promise = this.rpc.request(\"octalmage.meep.meep.Msg\", \"DeletePost\", data);\n        return promise.then((data) => MsgDeletePostResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}